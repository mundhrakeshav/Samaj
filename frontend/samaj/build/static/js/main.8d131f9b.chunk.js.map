{"version":3,"sources":["context/UserContext.js","Components/Appbar/Appbar.jsx","Components/Home/HomePage.jsx","Components/Profile/Profile.jsx","Components/Profile/PapersPage/PapersPage.jsx","Components/LandingPage/LeftColumn/LeftColumn.jsx","Components/AddNewPatent/AddNewPatent.jsx","Components/LandingPage/RightColumn/RightColumn.jsx","Components/Profile/BlogsPage/BlogsPage.jsx","Components/Profile/DetailedBlog/DetailedBlog.jsx","Components/SearchPage/SearchPage.jsx","Components/SearchPage/SearchBlogs/SearchBlogs.jsx","Components/SearchPage/SearchPapers/SearchPapers.jsx","Components/LandingPage/LandingPage.jsx","App.js","index.js","context/Web3Context.js","context/config.js","Components/LandingPage/RegisterLandingScreen/RegisterScreen.jsx","Components/AddNewBlog/AddNewBlog.jsx","Components/AddNewResearchpaper/AddNewResearchPaper.jsx","Components/AddNewPost/AddNewPost.jsx","serverConfig.js","context/ContractsMetaData.js"],"names":["UserContext","createContext","UserContextProvider","props","useState","user","setUser","Provider","value","children","Appbar","userAddress","useContext","Web3Context","searchAddress","setSearchAddress","history","useHistory","Container","fluid","className","Row","Col","Navbar","Brand","Form","inline","onSubmit","push","FormControl","type","size","placeholder","onChange","event","target","OverlayTrigger","placement","trigger","overlay","Tooltip","href","Spinner","animation","HomePage","Profile","profileIsLoading","toggleProfileLoading","userData","setUserData","samajContract","sendTransaction","console","log","useEffect","initialiseData","a","axios","get","profileDetailsIPFSHash","response","data","tag","isCreator","role","height","src","profileImageIPFShash","alt","xs","userName","bio","Button","onClick","e","preventDefault","_tokenName","prompt","_tokenSymbol","window","confirm","functionData","methods","becomeCreator","variant","Card","style","width","Body","Title","Subtitle","numberOfBlogs","to","numberOfResearchPapers","numberOfMiscPosts","numberOfPatents","PapersPage","papers","isLoading","setLoading","init","i","getResearchPaper","call","paper","ipfsDetailsHash","paperDetails","paperDocHash","ipfsImageHash","blogsElement","map","index","key","Footer","LeftColumn","AddNewPatent","require","IpfsHttpClient","host","port","protocol","Group","Label","Control","controlId","as","rows","alert","File","label","Web3","utils","BN","toast","configure","RightColumn","samajContractAddress","erc20ApproveWithSignContract","erc20NonApproveWithSignContract","usdContract","sendTransactionToERC20ApproveWithSignature","daiBalance","setDaiBalance","usdBalance","setUSDBalance","kmBalance","setkmBalance","daiAllowance","setDaiAllowance","kmAllowance","setkmAllowance","daiAmount","name","price","product","handleToken","token","addresses","post","serverConfig","baseUrl","address","status","balanceOf","then","dai","allowance","km","usd","mint","send","from","approveWithSignatureFunctionData","approveViaSignature","approve","stripeKey","bitcoin","amount","currency","BlogsPage","blogs","getBlog","blog","blogDetails","imageHash","title","body","DetailedBlog","setBlog","blogImageHash","setImageHash","blogId","useParams","_blog","_blogBodyHash","_blogBodyResponse","_blogBody","Img","SearchPage","isRegistered","setRegisteration","paymentMethod","setPaymentMethod","paymentMethodId","setPaymentMethodId","users","getDetails","xl","Dropdown","Toggle","id","Menu","Item","onSelect","supportUserDai","supportUserKM","purchaseCreatorToken","Fragment","SearchPapers","numberOfPapers","LandingPage","path","component","exact","AddNewBlog","AddNewreasearchpaper","AddNewPost","SearchBlog","RegisterScreen","App","ReactDOM","render","document","getElementById","abi","_web3","Web3ContextProvider","setAddress","setSamajContract","setUSDContract","seterc20ApproveWithSignContract","seterc20NonApproveWithSignContract","web3","setWeb3","ethereum","provider","biconomy","Biconomy","apiKey","config","biconomyApiKey","debug","enable","selectedAddress","onEvent","READY","_samajContract","eth","Contract","ContractsMetaData","contractABI","samaj","contractAddress","_erc20ApproveWithSignatureContract","erc20ApproveWithSignature","_erc20NonApproveWithSignatureContract","erc20NonApproveWithSignature","_usdContract","usdToken","setProvider","on","accounts","ERROR","err","message","getNonce","nonce","functionSignature","encodeABI","messageToSign","constructMetaTransactionMessage","personal","sign","toString","signature","info","getSignatureParameters","r","s","v","relayTransactionToERC20ApproveWithSignContract","executeMetaTransaction","estimateGas","gasLimit","getGasPrice","gasPrice","toHex","hash","once","confirmationNumber","receipt","relayTransaction","chainId","soliditySHA3","toBuffer","isHexStrict","Error","concat","slice","hexToNumber","includes","module","exports","rinkebyChainID","ipfs","profileImage","setImage","profileImageBuffer","setBuffer","setUserName","setBio","Prepend","Text","URL","createObjectURL","files","file","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","result","add","imageIpfsResponse","profileData","JSON","stringify","profileDataIpfsResponse","createUser","setTitle","setBody","blogImage","setBlogImage","blogImageBuffer","setBlogImageBuffer","resposneImage","responseData","addBlog","AddNewReasearchPaper","abstract","setAbstract","docBuffer","setDocBuffer","abstractIpfsResponse","docIpfsResponse","docIpfsHash","abstractIpfsHash","addResearchPaper","caption","setCaption","postImage","setPostImage","postImageBuffer","setPostImageBuffer","captionIpfsResponse","captionIpfsHash","imageIpfsHash","addMiscPost","tellorDataIDs","bnb","trx","tellorGetLatestPrice","inputs","payable","stateMutability","anonymous","indexed","internalType","constant","outputs","components"],"mappings":"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","file":"static/js/main.8d131f9b.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [user, setUser] = useState({});\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Navbar,\n  Container,\n  Row,\n  Col,\n  Form,\n  FormControl,\n  OverlayTrigger,\n  Tooltip,\n  Spinner,\n} from \"react-bootstrap\";\nimport { MdPermIdentity } from \"react-icons/md\";\nimport \"./Appbar.css\";\nimport { Web3Context } from \"../../context/Web3Context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Appbar = () => {\n  const { userAddress } = useContext(Web3Context);\n  const [searchAddress, setSearchAddress] = useState();\n  let history = useHistory();\n\n  const handleClick = () => {\n    history.push(`/user/${searchAddress}`);\n  };\n\n  return (\n    <Container fluid className=\"appbar-container\">\n      <div className=\"appbar\">\n        <Row>\n          <Col>\n            <Navbar>\n              <Navbar.Brand className=\"appbar-brand\">\n                <span>समाज</span>\n              </Navbar.Brand>\n            </Navbar>\n          </Col>\n          <Col>\n            <Form inline className=\"form\" onSubmit={handleClick}>\n              <FormControl\n                type=\"text\"\n                size=\"sm\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2 form-inputbox\"\n                onChange={(event) => {\n                  setSearchAddress(event.target.value);\n                }}\n              />\n            </Form>\n          </Col>\n          <Col className=\"column-last\">\n            <span>\n              <OverlayTrigger\n                placement=\"top\"\n                trigger=\"hover | trigger\"\n                overlay={<Tooltip>View Account</Tooltip>}>\n                <a\n                  href={`https://rinkeby.etherscan.io/address/${userAddress}`}\n                  className=\"user-address\">\n                  <MdPermIdentity size=\"1.5rem\" className=\"user-icon\" />\n                  {userAddress ? userAddress : <Spinner animation=\"border\" />}\n                </a>\n              </OverlayTrigger>\n            </span>\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n};\n\nexport default Appbar;\n","import React from \"react\";\n\nconst HomePage = () => {\n  return <div>TODO ASAP HomePage </div>;\n};\n\nexport default HomePage;\n","import React, { useContext, useEffect } from \"react\";\nimport { Col, Container, Button, Row, Spinner, Card } from \"react-bootstrap\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { Web3Context } from \"../../context/Web3Context\";\nimport axios from \"axios\";\nimport \"./Profile.css\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = () => {\n  const [profileIsLoading, toggleProfileLoading] = useState(true);\n  const [userData, setUserData] = useState({});\n  const [creatorContract, setCreatorContract] = useState(null);\n\n  const { user } = useContext(UserContext);\n  const { samajContract, sendTransaction } = useContext(Web3Context);\n\n  console.log(user);\n\n  useEffect(() => {\n    initialiseData();\n  }, []);\n\n  const initialiseData = async () => {\n    const response = await axios.get(\n      `https://ipfs.io/ipfs/${user.profileDetailsIPFSHash}`\n    );\n    setUserData(response.data);\n    toggleProfileLoading(false);\n    console.log(response.data);\n  };\n\n  const tag = user.isCreator ? \"Creator\" : \"\";\n\n  if (profileIsLoading) {\n    return (\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    );\n  } else {\n    return (\n      <Container fluid className=\"head-container\">\n        <Row className=\"head-row\">\n          <Col className=\"image-column\">\n            <img\n              height=\"128px\"\n              src={`https://ipfs.io/ipfs/${user.profileImageIPFShash}`}\n              alt=\"Profile Image\"\n            />\n          </Col>\n          <Col xs={8} className=\"details-column\">\n            <Row className=\"username\">{userData.userName}</Row>\n            <Row className=\"bio\">{userData.bio}</Row>\n            <Row className=\"bio\">{tag}</Row>\n\n            <br />\n            <Button\n              onClick={(e) => {\n                e.preventDefault();\n                // console.log(user);\n                let _tokenName = prompt(\"Name\");\n                let _tokenSymbol = prompt(\"symbol\");\n                let _confirm = window.confirm(\"Confirm or deny\");\n                if (_confirm) {\n                  const functionData = samajContract.methods.becomeCreator(\n                    _tokenName,\n                    _tokenSymbol\n                  );\n                  sendTransaction(functionData);\n                }\n              }}\n              variant=\"dark\"\n              className=\"become-creator-button\">\n              Let's bet your potential\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Card style={{ width: \"100%\" }} className=\"card blogs-card\">\n            <Card.Body>\n              <Card.Title>Blogs</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {user.numberOfBlogs} Blogs Yet\n              </Card.Subtitle>\n            </Card.Body>\n            <Link to=\"/blogs\" className=\"link\">\n              <Button variant=\"dark\" className=\"link-button\">\n                View Blogs\n              </Button>\n            </Link>\n          </Card>\n        </Row>\n        <Row>\n          <Card style={{ width: \"100%\" }} className=\"card researchPapers-card\">\n            <Card.Body>\n              <Card.Title>ResearchPapers</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {user.numberOfResearchPapers} Papers Yet\n              </Card.Subtitle>\n            </Card.Body>{\" \"}\n            <Link to=\"/researchPaper\" className=\"link\">\n              <Button variant=\"dark\" className=\"link-button\">\n                View ResearchPapers\n              </Button>{\" \"}\n            </Link>\n          </Card>\n        </Row>\n        <Row>\n          <Card className=\"card posts-card\">\n            <Card.Body>\n              <Card.Title>posts</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {user.numberOfMiscPosts} Posts Yet\n              </Card.Subtitle>\n            </Card.Body>\n            <Button variant=\"dark\">View Posts</Button>\n          </Card>\n        </Row>\n        <Row>\n          <Card style={{ width: \"100%\" }} className=\"card patents-card\">\n            <Card.Body>\n              <Card.Title>Patents</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {user.numberOfPatents} Patents Yet\n              </Card.Subtitle>\n            </Card.Body>\n            <Button variant=\"dark\">View Patents</Button>\n          </Card>\n        </Row>{\" \"}\n      </Container>\n    );\n  }\n};\n\nexport default Profile;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./PapersPage.css\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { Web3Context } from \"../../../context/Web3Context\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nconst PapersPage = () => {\n  const { user } = useContext(UserContext);\n\n  const { samajContract } = useContext(Web3Context);\n  const [papers, setPapers] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    init();\n  }, [papers]);\n\n  const init = async () => {\n    for (let i = 0; i < user.numberOfResearchPapers; i++) {\n      let paper = await samajContract.methods\n        .getResearchPaper(user.userAddress, i)\n        .call();\n\n      console.log(paper);\n      let paperDetails = await axios.get(\n        `http://ipfs.io/ipfs/${paper.ipfsDetailsHash}`\n      );\n\n      papers.push({\n        paperDetails: paperDetails.data,\n        paperDocHash: paper.ipfsImageHash,\n      });\n    }\n    console.log(papers, \"blogs\");\n    setLoading(false);\n  };\n\n  const blogsElement = papers.map((paper, index) => {\n    return (\n      <div key={index} className=\"blogs-wrapper\">\n        <Card className=\"paper\">\n          <Card.Title className=\"paper-abstract\">\n            {paper.paperDetails}\n          </Card.Title>\n          <Card.Footer>\n            <Row>\n              <a\n                href={`http://ipfs.io/ipfs/${paper.paperDocHash}`}\n                className=\"link-to-blog\">\n                <Button variant=\"dark\" className=\"link-to-blog-button\">\n                  Read Complete Paper\n                </Button>\n              </a>\n            </Row>\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  });\n\n  if (isLoading) return <div>Loading...</div>;\n  else return <div>{blogsElement}</div>;\n};\n\nexport default PapersPage;\n","import React from \"react\";\nimport { Container, Row, Button } from \"react-bootstrap\";\nimport {\n  FaHome,\n  FaUser,\n  FaNewspaper,\n  FaBlogger,\n  FaUpload,\n  FaLock,\n  FaMoneyBillAlt,\n} from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport \"./LeftColumn.css\";\n\nconst LeftColumn = () => {\n  return (\n    <Container className=\"left-column-container\">\n      <Row className=\"left-column-row\">\n        <Link to=\"/\">\n          <Button variant=\"dark\" className=\"left-column-button\">\n            <FaHome /> Home\n          </Button>\n        </Link>\n      </Row>\n      <Row>\n        <Link to=\"/profile\">\n          <Button variant=\"dark\" className=\"left-column-button\">\n            <FaUser /> Profile\n          </Button>\n        </Link>\n      </Row>\n      <br />\n      <Row>\n        <Link to=\"/addnewblog\">\n          <Button variant=\"dark\" className=\"left-column-button\">\n            <FaBlogger /> Blog\n          </Button>\n        </Link>\n      </Row>{\" \"}\n      <Row>\n        <Link to=\"/addnewpaper\">\n          <Button variant=\"dark\" className=\"left-column-button\">\n            <FaNewspaper /> Paper\n          </Button>\n        </Link>\n      </Row>{\" \"}\n      <Row>\n        <Link to=\"/addnewpatent\">\n          <Button variant=\"dark\" className=\"left-column-button\">\n            <FaLock /> Patent\n          </Button>\n        </Link>\n      </Row>\n      <Row>\n        <Link to=\"/addnewpost\">\n          <Button variant=\"dark\" className=\"left-column-button\">\n            <FaUpload /> Post\n          </Button>\n        </Link>\n      </Row>\n    </Container>\n  );\n};\n\nexport default LeftColumn;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  Container,\n  Dropdown,\n  Spinner,\n} from \"react-bootstrap\";\nimport { Web3Context } from \"../../context/Web3Context\";\n\nconst IpfsHttpClient = require(\"ipfs-http-client\");\nconst ipfs = IpfsHttpClient({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n});\n\nconst AddNewPatent = () => {\n  return (\n    <div className=\"form-wrapper\">\n      <Form className=\"blog-upload-form\">\n        <Form.Group>\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            type=\"Text\"\n            placeholder=\"Enter Title\"\n            className=\"input title-input\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Details</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={5}\n            className=\"input details-input\"\n          />\n        </Form.Group>\n        <input type=\"date\" />\n        <br />\n        <Row>\n          <Col>\n            <br />\n            <Button\n              variant=\"dark\"\n              type=\"submit\"\n              onClick={() => {\n                alert(\"Patents Havent been enabled\");\n              }}>\n              Add Patent\n            </Button>\n          </Col>\n          <Col>\n            <Form.File\n              className=\"profile-image-input\"\n              label=\"Attach a File\"\n              onChange={(event) => {\n                event.preventDefault();\n                //   setImage(URL.createObjectURL(event.target.files[0]));\n                //   const file = event.target.files[0];\n                //   const reader = new window.FileReader();\n                //   reader.readAsArrayBuffer(file);\n                //   reader.onloadend = () => {\n                //     setBuffer(Buffer(reader.result));\n                //   };\n              }}\n            />\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddNewPatent;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport Web3 from \"web3\";\nimport { Web3Context } from \"../../../context/Web3Context\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport \"./RightColumn.css\";\nimport serverConfig from \"../../../serverConfig\";\nconst web3 = new Web3();\nvar BN = web3.utils.BN;\n\ntoast.configure();\n\nconst RightColumn = () => {\n  const {\n    samajContractAddress,\n    userAddress,\n    erc20ApproveWithSignContract,\n    erc20NonApproveWithSignContract,\n    usdContract,\n    sendTransactionToERC20ApproveWithSignature,\n  } = useContext(Web3Context);\n  const [daiBalance, setDaiBalance] = useState(0);\n  const [usdBalance, setUSDBalance] = useState(0);\n  const [kmBalance, setkmBalance] = useState(0);\n  const [daiAllowance, setDaiAllowance] = useState(0);\n  const [kmAllowance, setkmAllowance] = useState(0);\n  const [daiAmount, setDaiAmount] = useState();\n  const [kmAmount, setKmAmount] = useState();\n\n  const [product] = useState({\n    name: \"SamajUSD\",\n    price: \"100\",\n  });\n\n  const handleToken = async (token, addresses) => {\n    console.log(token, addresses);\n    const response = await axios.post(`${serverConfig.baseUrl}/payviacard`, {\n      token,\n      product,\n      address: userAddress,\n    });\n    console.log(response.data);\n    const { status } = response.data;\n    alert(status);\n    if (status == \"success\") {\n      toast(\"Success! Balance will be updated in a moment\", {\n        type: \"success\",\n      });\n    } else {\n      toast(\"Something went wrong\", {\n        type: \"error\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  console.log(\"K\");\n  const init = async () => {\n    erc20ApproveWithSignContract.methods\n      .balanceOf(userAddress)\n      .call()\n      .then((dai) => {\n        setDaiBalance(dai / 10 ** 18);\n      });\n    erc20ApproveWithSignContract.methods\n      .allowance(userAddress, samajContractAddress)\n      .call()\n      .then((dai) => {\n        setDaiAllowance(dai / 10 ** 18);\n      });\n\n    erc20NonApproveWithSignContract.methods\n      .balanceOf(userAddress)\n      .call()\n      .then((km) => {\n        setkmBalance(km / 10 ** 18);\n      });\n\n    erc20NonApproveWithSignContract.methods\n      .allowance(userAddress, samajContractAddress)\n      .call()\n      .then((km) => {\n        setkmAllowance(km / 10 ** 18);\n      });\n\n    usdContract.methods\n      .balanceOf(userAddress)\n      .call()\n      .then((usd) => {\n        setUSDBalance(usd / 10 ** 18);\n      });\n\n    // console.log(usdContract.methods);\n  };\n\n  const increaseDaiAllowance = () => {\n    console.log(daiAmount);\n    const requiredAllowance = daiAmount * 10 ** 18;\n    const approveWithSignatureFunctionData = erc20ApproveWithSignContract.methods.approveViaSignature(\n      samajContractAddress,\n      \"100000000000000000000\"\n    );\n    sendTransactionToERC20ApproveWithSignature(\n      approveWithSignatureFunctionData\n    );\n  };\n\n  const increaseKMAllowance = () => {\n    erc20NonApproveWithSignContract.methods\n      .approve(samajContractAddress, \"100000000000000000000\")\n      .send({ from: userAddress });\n  };\n\n  return (\n    <div className=\"right-column\">\n      <Container>\n        This minting function is only for testing and development:\n        <br />\n        <Button\n          variant=\"dark\"\n          className=\"mint-button button\"\n          onClick={() => {\n            erc20ApproveWithSignContract.methods\n              .mint(userAddress, \"1000000000000000000000\")\n              .send({ from: userAddress });\n          }}>\n          Mint Dai\n        </Button>\n        <Button\n          variant=\"dark\"\n          className=\"mint-button button\"\n          onClick={() => {\n            erc20NonApproveWithSignContract.methods\n              .mint(userAddress, \"1000000000000000000000\")\n              .send({ from: userAddress });\n          }}>\n          Mint KM\n        </Button>\n        <Row className=\"dai-head head\">Dai: </Row>\n        <Row className=\"dai-balance balance\">\n          <Col>Balance:</Col>\n          <Col>{daiBalance} DAI</Col>\n        </Row>\n        <Row className=\"dai-allowance allowance\">\n          <Col>Allowance:</Col>\n          <Col>{daiAllowance} DAI</Col>\n        </Row>\n        <br />\n        <Button\n          variant=\"dark\"\n          className=\"dai-button button\"\n          onClick={increaseDaiAllowance}>\n          Allow 100 Token Transfer\n        </Button>\n        <hr />\n        <Row className=\"km-head head\">KM: </Row>\n        <Row className=\"km-balance balance\">\n          <Col>Balance:</Col>\n          <Col>{kmBalance} KM</Col>\n        </Row>\n        <Row className=\"km-allowance allowance\">\n          <Col>Allowance:</Col>\n          <Col>{kmAllowance} KM</Col>\n        </Row>\n        <br />\n        <Button\n          variant=\"dark\"\n          className=\"km-button button\"\n          onClick={increaseKMAllowance}>\n          Allow 100 Token Transfer\n        </Button>\n      </Container>\n\n      <br />\n\n      <Container>\n        <hr />\n        <Row className=\"km-head head\">USD: </Row>\n        <Row className=\"km-balance balance\">\n          <Col>Balance:</Col>\n          <Col>{usdBalance} USD</Col>\n        </Row>\n\n        <br />\n      </Container>\n      <StripeCheckout\n        name=\"SamajUSD\"\n        stripeKey=\"pk_test_51H4LU8KNc2CAIgjv7287ALDDieK9w456yt9gun8DvEgU45dCcIxspp7hwmILzHGetXHFxNynnbHJOBvu3l2lk1e0004I7LOSzl\"\n        token={handleToken}\n        bitcoin\n        amount={10000}\n        currency=\"USD\"\n      />\n      <br />\n      <br />\n\n      <Button\n        variant=\"dark\"\n        className=\"creator-button button\"\n        onClick={() => {}}>\n        Become a creator\n      </Button>\n    </div>\n  );\n};\n\nexport default RightColumn;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./BlogsPage.css\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { Web3Context } from \"../../../context/Web3Context\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nconst BlogsPage = () => {\n  const { user } = useContext(UserContext);\n\n  const { samajContract } = useContext(Web3Context);\n  const [blogs, setBlogs] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    init();\n  }, [blogs]);\n\n  const init = async () => {\n    for (let i = 0; i < user.numberOfBlogs; i++) {\n      let blog = await samajContract.methods\n        .getBlog(user.userAddress, i)\n        .call();\n\n      let blogDetails = await axios.get(\n        `http://ipfs.io/ipfs/${blog.ipfsDetailsHash}`\n      );\n\n      blogs.push({\n        blogDetails: blogDetails.data,\n        imageHash: blog.ipfsImageHash,\n      });\n    }\n    console.log(blogs, \"blogs\");\n    setLoading(false);\n  };\n\n  const blogsElement = blogs.map((blog, index) => {\n    return (\n      <div key={index} className=\"blogs-wrapper\">\n        <Card className=\"blog\">\n          <Card.Title className=\"blog-title\">\n            {blog.blogDetails.title}\n          </Card.Title>\n          <Card.Body className=\"blog-body\">{blog.blogDetails.body}</Card.Body>\n          <Card.Footer>\n            <Row>\n              <Link to={`blogs/${index}`} className=\"link-to-blog\">\n                <Button variant=\"dark\" className=\"link-to-blog-button\">\n                  Read Full Blog\n                </Button>\n              </Link>\n            </Row>\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  });\n\n  if (isLoading) return <div>Loading...</div>;\n  else return <div>{blogsElement}</div>;\n};\n\nexport default BlogsPage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Web3Context } from \"../../../context/Web3Context\";\nimport { Spinner, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./DetailedBlog.css\";\nconst DetailedBlog = () => {\n  const { samajContract, userAddress } = useContext(Web3Context);\n  const [blog, setBlog] = useState({});\n  const [blogImageHash, setImageHash] = useState(\"\");\n\n  const { blogId } = useParams();\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const init = async () => {\n    const _blog = await samajContract.methods\n      .getBlog(userAddress, blogId)\n      .call();\n\n    const _blogBodyHash = _blog.ipfsDetailsHash;\n    setImageHash(_blog.ipfsImageHash);\n\n    const _blogBodyResponse = await axios.get(\n      `http://ipfs.io/ipfs/${_blogBodyHash}`\n    );\n    const _blogBody = _blogBodyResponse.data;\n    console.log(_blogBody);\n    setBlog(_blogBody);\n    setLoading(false);\n  };\n\n  if (!isLoading) {\n    return (\n      <div className=\"card-wrapper-detailed-blog\">\n        <Card className=\"blog-detailed-blog\">\n          <Card.Img\n            variant=\"top\"\n            src={`http://ipfs.io/ipfs/${blogImageHash}`}\n            height=\"50%\"\n            width=\"50%\"\n            className=\"blog-image-detailed-blog\"\n          />\n\n          <Card.Title className=\"blog-title-detailed-blog\">\n            {blog.title}\n          </Card.Title>\n          <Card.Body className=\"blog-body-detailed-blog\">{blog.body}</Card.Body>\n        </Card>\n      </div>\n    );\n  } else {\n    return <div>Kehsavb</div>;\n  }\n};\n\nexport default DetailedBlog;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Spinner,\n  Card,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { Web3Context } from \"../../context/Web3Context\";\nimport { UserContext } from \"../../context/UserContext\";\nimport axios from \"axios\";\nimport \"./SearchPage.css\";\n\nconst SearchPage = () => {\n  const { searchAddress } = useParams();\n  const [isLoading, setLoading] = useState(true);\n  const { samajContract, userAddress, sendTransaction } = useContext(\n    Web3Context\n  );\n  const [isRegistered, setRegisteration] = useState(false);\n  const [user, setUser] = useState({});\n  const [userData, setUserData] = useState({});\n  const [paymentMethod, setPaymentMethod] = useState(\"Payment Option\");\n  const [paymentMethodId, setPaymentMethodId] = useState(1);\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const init = () => {\n    samajContract.methods\n      .users(searchAddress)\n      .call()\n      .then((response) => {\n        console.log(response);\n        setUser(response);\n        if (!response.isRegistered) {\n          setRegisteration(false);\n          return;\n        } else {\n          setRegisteration(true);\n          getDetails(response);\n        }\n      });\n  };\n\n  const supportUserDai = () => {\n    let functionData = samajContract.methods.supportUserDai(\n      \"10000000000000000000\",\n      userAddress,\n      searchAddress\n    );\n    sendTransaction(functionData);\n  };\n\n  const supportUserKM = () => {\n    let functionData = samajContract.methods.supportUserKM(\n      \"10000000000000000000\",\n      userAddress,\n      searchAddress\n    );\n    sendTransaction(functionData);\n  };\n\n  const getDetails = async (user) => {\n    const response = await axios.get(\n      `https://ipfs.io/ipfs/${user.profileDetailsIPFSHash}`\n    );\n    setUserData(response.data);\n    setLoading(false);\n  };\n\n  const purchaseButton = () => {\n    if (user.isCreator) {\n      return (\n        <Col>\n          <Button\n            className=\"purchase-button\"\n            variant=\"dark\"\n            size=\"sm\"\n            onClick={() => {\n              const functionData = samajContract.methods.purchaseCreatorToken(\n                searchAddress,\n                \"10000000000000000000\",\n                paymentMethodId\n              );\n              sendTransaction(functionData);\n            }}>\n            Purchase\n          </Button>\n        </Col>\n      );\n    } else {\n      return <React.Fragment></React.Fragment>;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    );\n  } else {\n    if (!isRegistered) {\n      return <h1>Not Registered</h1>;\n    } else {\n      return (\n        <div>\n          <Container>\n            <Row>\n              <Col>\n                <img\n                  height=\"128px\"\n                  src={`https://ipfs.io/ipfs/${user.profileImageIPFShash}`}\n                  alt=\"Profile Image\"\n                />\n              </Col>\n              <Col xs={8} className=\"details-column\">\n                <Col xl={8}>\n                  <Row className=\"username\">{userData.userName}</Row>\n                  <Row className=\"bio\">{userData.bio}</Row>\n                </Col>\n                <br />\n                <Col>\n                  <Row>\n                    <Dropdown className=\"dropdown\">\n                      <Dropdown.Toggle\n                        variant=\"dark\"\n                        id=\"dropdown-basic\"\n                        size=\"sm\">\n                        {paymentMethod}\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onSelect={() => {\n                            setPaymentMethod(\"DAI\");\n                            setPaymentMethodId(1);\n                          }}>\n                          DAI\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onSelect={() => {\n                            setPaymentMethod(\"KM\");\n                            setPaymentMethodId(2);\n                          }}>\n                          KM\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onSelect={() => {\n                            setPaymentMethod(\"USD\");\n                            setPaymentMethodId(3);\n                          }}>\n                          USD\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                    <Col>\n                      <Button\n                        className=\"tip-button\"\n                        variant=\"dark\"\n                        size=\"sm\"\n                        onClick={() => {\n                          // console.log(user);\n                          if (paymentMethodId == 1) supportUserDai();\n                          else supportUserKM();\n                        }}>\n                        Support User\n                      </Button>\n                    </Col>\n                    {purchaseButton()}\n                  </Row>\n                </Col>\n              </Col>\n            </Row>\n            <Row>\n              <Card style={{ width: \"100%\" }} className=\"card blogs-card\">\n                <Card.Body>\n                  <Card.Title>Blogs</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    {user.numberOfBlogs} Blogs Yet\n                  </Card.Subtitle>\n                </Card.Body>\n                <Link\n                  to={`/searchblogs/${searchAddress}/${user.numberOfBlogs}`}\n                  className=\"link\">\n                  <Button variant=\"dark\" className=\"link-button\">\n                    View Blogs\n                  </Button>\n                </Link>\n              </Card>\n            </Row>{\" \"}\n            <Row>\n              <Card\n                style={{ width: \"100%\" }}\n                className=\"card researchPapers-card\">\n                <Card.Body>\n                  <Card.Title>ResearchPapers</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    {user.numberOfResearchPapers} Papers Yet\n                  </Card.Subtitle>\n                </Card.Body>\n                <Link\n                  to={`/searchpapers/${searchAddress}/${user.numberOfResearchPapers}`}\n                  className=\"link\">\n                  <Button variant=\"dark\" className=\"link-button\">\n                    View ResearchPapers\n                  </Button>\n                </Link>\n              </Card>\n            </Row>\n            <Row>\n              <Card className=\"card posts-card\">\n                <Card.Body>\n                  <Card.Title>posts</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    {user.numberOfMiscPosts} Posts Yet\n                  </Card.Subtitle>\n                </Card.Body>\n                <Button variant=\"dark\">View Posts</Button>\n              </Card>\n            </Row>\n            <Row>\n              <Card style={{ width: \"100%\" }} className=\"card patents-card\">\n                <Card.Body>\n                  <Card.Title>Patents</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    {user.numberOfPatents} Patents Yet\n                  </Card.Subtitle>\n                </Card.Body>\n                <Button variant=\"dark\">View Patents</Button>\n              </Card>\n            </Row>{\" \"}\n          </Container>\n        </div>\n      );\n    }\n  }\n};\n\nexport default SearchPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { Web3Context } from \"../../../context/Web3Context\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nconst BlogsPage = () => {\n  const { user } = useContext(UserContext);\n  const { searchAddress, numberOfBlogs } = useParams();\n  const { samajContract } = useContext(Web3Context);\n  const [blogs, setBlogs] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    init();\n  }, [blogs]);\n\n  const init = async () => {\n    for (let i = 0; i < numberOfBlogs; i++) {\n      let blog = await samajContract.methods.getBlog(searchAddress, i).call();\n\n      let blogDetails = await axios.get(\n        `http://ipfs.io/ipfs/${blog.ipfsDetailsHash}`\n      );\n\n      blogs.push({\n        blogDetails: blogDetails.data,\n        imageHash: blog.ipfsImageHash,\n      });\n    }\n    console.log(blogs, \"blogs\");\n    setLoading(false);\n  };\n\n  const blogsElement = blogs.map((blog, index) => {\n    return (\n      <div key={index} className=\"blogs-wrapper\">\n        <Card className=\"blog\">\n          <Card.Title className=\"blog-title\">\n            {blog.blogDetails.title}\n          </Card.Title>\n          <Card.Body className=\"blog-body\">{blog.blogDetails.body}</Card.Body>\n          <Card.Footer>\n            <Row>\n              <Link to={`blogs/${index}`} className=\"link-to-blog\">\n                <Button variant=\"dark\" className=\"link-to-blog-button\">\n                  Read Full Blog\n                </Button>\n              </Link>\n            </Row>\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  });\n\n  if (isLoading) return <div>Loading...</div>;\n  else return <div>{blogsElement}</div>;\n};\n\nexport default BlogsPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport { Web3Context } from \"../../../context/Web3Context\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nconst SearchPapers = () => {\n  const { user } = useContext(UserContext);\n  const { searchAddress, numberOfPapers } = useParams();\n\n  const { samajContract } = useContext(Web3Context);\n  const [papers, setPapers] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    init();\n  }, [papers]);\n\n  const init = async () => {\n    for (let i = 0; i < numberOfPapers; i++) {\n      let paper = await samajContract.methods\n        .getResearchPaper(searchAddress, i)\n        .call();\n\n      console.log(paper);\n      let paperDetails = await axios.get(\n        `http://ipfs.io/ipfs/${paper.ipfsDetailsHash}`\n      );\n\n      papers.push({\n        paperDetails: paperDetails.data,\n        paperDocHash: paper.ipfsImageHash,\n      });\n    }\n    console.log(papers, \"blogs\");\n    setLoading(false);\n  };\n\n  const blogsElement = papers.map((paper, index) => {\n    return (\n      <div key={index} className=\"blogs-wrapper\">\n        <Card className=\"paper\">\n          <Card.Title className=\"paper-abstract\">\n            {paper.paperDetails}\n          </Card.Title>\n          <Card.Footer>\n            <Row>\n              <a\n                href={`http://ipfs.io/ipfs/${paper.paperDocHash}`}\n                className=\"link-to-blog\">\n                <Button variant=\"dark\" className=\"link-to-blog-button\">\n                  Read Complete Paper\n                </Button>\n              </a>\n            </Row>\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  });\n\n  if (isLoading) return <div>Loading...</div>;\n  else return <div>{blogsElement}</div>;\n};\n\nexport default SearchPapers;\n","import React, { useContext, useEffect } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./LandingPage.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"../Home/HomePage\";\nimport Profile from \"../Profile/Profile\";\nimport { Web3Context } from \"../../context/Web3Context\";\nimport { UserContext } from \"../../context/UserContext\";\nimport PapersPage from \"../Profile/PapersPage/PapersPage\";\nimport LeftColumn from \"./LeftColumn/LeftColumn\";\nimport RegisterScreen from \"./RegisterLandingScreen/RegisterScreen\";\nimport { useState } from \"react\";\nimport AddNewBlog from \"../AddNewBlog/AddNewBlog\";\nimport AddNewreasearchpaper from \"../AddNewResearchpaper/AddNewResearchPaper\";\nimport AddNewPatent from \"../AddNewPatent/AddNewPatent\";\nimport AddNewPost from \"../AddNewPost/AddNewPost\";\nimport RightColumn from \"./RightColumn/RightColumn\";\nimport BlogsPage from \"../Profile/BlogsPage/BlogsPage\";\nimport DetailedBlog from \"../Profile/DetailedBlog/DetailedBlog\";\nimport SearchPage from \"../SearchPage/SearchPage\";\nimport SearchBlog from \"../SearchPage/SearchBlogs/SearchBlogs\";\nimport SearchPapers from \"../SearchPage/SearchPapers/SearchPapers\";\n\nconst LandingPage = () => {\n  const { samajContract, userAddress } = useContext(Web3Context);\n  const { user, setUser } = useContext(UserContext);\n\n  const [isRegistered, setRegisteration] = useState(false);\n  useEffect(() => {\n    samajContract.methods\n      .users(userAddress)\n      .call()\n      .then((response) => {\n        response.userAddress = userAddress;\n        setUser(response);\n        setRegisteration(response.isRegistered);\n      });\n  }, []);\n\n  if (isRegistered) {\n    return (\n      <Container className=\"landingpage\" fluid>\n        <Row>\n          <Col xl={2} className=\"left-column\">\n            <LeftColumn />\n          </Col>\n          <Col xl={7} className=\"middle-column\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/profile\" component={Profile} exact />\n              <Route path=\"/addnewblog\" component={AddNewBlog} exact />\n              <Route\n                path=\"/addnewpaper\"\n                component={AddNewreasearchpaper}\n                exact\n              />\n              <Route path=\"/addnewpatent\" component={AddNewPatent} exact />\n              <Route path=\"/addnewpost\" component={AddNewPost} exact />\n              <Route path=\"/blogs\" component={BlogsPage} exact />\n              {/* //researchPaper */}\n              <Route path=\"/researchPaper\" component={PapersPage} exact />\n\n              <Route path=\"/blogs/:blogId\" component={DetailedBlog} exact />\n              <Route path=\"/user/:searchAddress\" component={SearchPage} exact />\n              <Route\n                path=\"/searchblogs/:searchAddress/:numberOfBlogs\"\n                component={SearchBlog}\n                exact\n              />\n              <Route\n                path=\"/searchpapers/:searchAddress/:numberOfPapers\"\n                component={SearchPapers}\n                exact\n              />\n            </Switch>\n          </Col>\n          <Col xl={3} className=\"right-column\">\n            <RightColumn />\n          </Col>\n        </Row>\n      </Container>\n    );\n  } else {\n    return <RegisterScreen />;\n  }\n};\n\nexport default LandingPage;\n","import React, { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport Appbar from \"./Components/Appbar/Appbar\";\nimport LandingPage from \"./Components/LandingPage/LandingPage\";\nimport { Web3Context } from \"./context/Web3Context\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction App() {\n  const { init, userAddress, isLoading } = useContext(Web3Context);\n\n  useEffect(() => {\n    console.log(isLoading, \"isLoading\");\n    init();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"App\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n        <span>Loading!!</span>\n        <span>Please reload after connecting metamask</span>\n      </div>\n    );\n  } else\n    return (\n      <div className=\"App\">\n        <Router>\n          <Appbar />\n          <LandingPage />\n        </Router>\n      </div>\n    );\n\n  // return isLoading ? (\n  // <span>Loading...</span>\n  // // ) : (\n  //   <div className=\"App\">\n  //     <Router>\n  //       <Appbar />\n  //       <LandingPage />\n  //     </Router>\n  //   </div>\n  // );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Web3ContextProvider from \"./context/Web3Context\";\nimport UserContextProvider from \"./context/UserContext\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Web3ContextProvider>\n    <UserContextProvider>\n      <App />\n    </UserContextProvider>\n  </Web3ContextProvider>,\n  document.getElementById(\"root\")\n);\n","import React, { createContext, useState } from \"react\";\nimport Web3 from \"web3\";\nimport Biconomy from \"@biconomy/mexa\";\nimport { toBuffer } from \"ethereumjs-util\";\nimport { config } from \"./config\";\nimport ContractsMetaData from \"./ContractsMetaData\";\n\nvar abi = require(\"ethereumjs-abi\");\nexport const Web3Context = createContext();\n\nlet _web3 = new Web3();\n\nconst Web3ContextProvider = (props) => {\n  const [userAddress, setAddress] = useState(null);\n  const [samajContract, setSamajContract] = useState();\n  const [usdContract, setUSDContract] = useState();\n  const [\n    erc20ApproveWithSignContract,\n    seterc20ApproveWithSignContract,\n  ] = useState();\n  const [\n    erc20NonApproveWithSignContract,\n    seterc20NonApproveWithSignContract,\n  ] = useState();\n\n  const [web3, setWeb3] = useState(_web3);\n  const [isLoading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  const init = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = window.ethereum;\n        const biconomy = new Biconomy(provider, {\n          apiKey: config.biconomyApiKey,\n          debug: true,\n        });\n        await window.ethereum.enable();\n        setWeb3(new Web3(biconomy));\n        setAddress(provider.selectedAddress);\n\n        biconomy\n          .onEvent(biconomy.READY, async () => {\n            const _samajContract = new web3.eth.Contract(\n              ContractsMetaData.contractABI.samaj,\n              ContractsMetaData.contractAddress.samaj\n            );\n\n            const _erc20ApproveWithSignatureContract = new web3.eth.Contract(\n              ContractsMetaData.contractABI.erc20ApproveWithSignature,\n              ContractsMetaData.contractAddress.erc20ApproveWithSignature\n            );\n\n            const _erc20NonApproveWithSignatureContract = new web3.eth.Contract(\n              ContractsMetaData.contractABI.erc20NonApproveWithSignature,\n              ContractsMetaData.contractAddress.erc20NonApproveWithSignature\n            );\n            const _usdContract = new web3.eth.Contract(\n              ContractsMetaData.contractABI.usdToken,\n              ContractsMetaData.contractAddress.usdToken\n            );\n            _erc20ApproveWithSignatureContract.setProvider(biconomy);\n            _erc20NonApproveWithSignatureContract.setProvider(biconomy);\n            _samajContract.setProvider(biconomy);\n            _usdContract.setProvider(biconomy);\n            setUSDContract(_usdContract);\n            setSamajContract(_samajContract);\n            seterc20ApproveWithSignContract(_erc20ApproveWithSignatureContract);\n            seterc20NonApproveWithSignContract(\n              _erc20NonApproveWithSignatureContract\n            );\n            setLoading(false);\n            provider.on(\"accountsChanged\", function (accounts) {\n              setAddress(accounts[0]);\n            });\n          })\n          .onEvent(biconomy.ERROR, (err, message) => {\n            alert(message);\n            console.log(err, message);\n          });\n      } catch (error) {\n        console.log(\"Please allow access to connect to web3 \");\n      }\n    } else {\n      console.log(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  };\n\n  //functionDataExample = contract.methods.setQuote(\"New Quote via meta TX\")\n\n  const sendTransactionToERC20ApproveWithSignature = async (functionData) => {\n    if (erc20ApproveWithSignContract) {\n      let nonce = await erc20ApproveWithSignContract.methods\n        .getNonce(userAddress)\n        .call();\n      let functionSignature = functionData.encodeABI();\n      let messageToSign = constructMetaTransactionMessage(\n        nonce,\n        4,\n        functionSignature,\n        ContractsMetaData.contractAddress.erc20ApproveWithSignature\n      );\n      const signature = await web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n      console.info(`User signature is ${signature}`);\n      let { r, s, v } = getSignatureParameters(signature);\n      relayTransactionToERC20ApproveWithSignContract(\n        userAddress,\n        functionSignature,\n        r,\n        s,\n        v\n      );\n    }\n  };\n\n  const relayTransactionToERC20ApproveWithSignContract = async (\n    userAddress,\n    functionData,\n    r,\n    s,\n    v\n  ) => {\n    if (web3 && erc20ApproveWithSignContract) {\n      try {\n        let gasLimit = await erc20ApproveWithSignContract.methods\n          .executeMetaTransaction(userAddress, functionData, r, s, v)\n          .estimateGas();\n        let gasPrice = await web3.eth.getGasPrice();\n        console.log(gasLimit);\n        console.log(gasPrice);\n        let tx = erc20ApproveWithSignContract.methods\n          .executeMetaTransaction(userAddress, functionData, r, s, v)\n          .send({\n            from: userAddress,\n            gasPrice: web3.utils.toHex(gasPrice),\n            gasLimit: web3.utils.toHex(gasLimit),\n          });\n\n        tx.on(\"transactionHash\", function (hash) {\n          console.log(`Transaction hash is ${hash}`);\n          alert(`Transaction sent by relayer with hash ${hash}`);\n        }).once(\"confirmation\", function (confirmationNumber, receipt) {\n          console.log(receipt);\n          alert(\"Transaction confirmed on chain\");\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const sendTransaction = async (functionData) => {\n    if (samajContract) {\n      let nonce = await samajContract.methods.getNonce(userAddress).call();\n      let functionSignature = functionData.encodeABI();\n      let messageToSign = constructMetaTransactionMessage(\n        nonce,\n        4,\n        functionSignature,\n        ContractsMetaData.contractAddress.samaj\n      );\n      const signature = await web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n      console.info(`User signature is ${signature}`);\n      let { r, s, v } = getSignatureParameters(signature);\n      relayTransaction(userAddress, functionSignature, r, s, v);\n    }\n  };\n\n  const relayTransaction = async (userAddress, functionData, r, s, v) => {\n    if (web3 && samajContract) {\n      try {\n        let gasLimit = await samajContract.methods\n          .executeMetaTransaction(userAddress, functionData, r, s, v)\n          .estimateGas();\n        let gasPrice = await web3.eth.getGasPrice();\n        console.log(gasLimit);\n        console.log(gasPrice);\n        let tx = samajContract.methods\n          .executeMetaTransaction(userAddress, functionData, r, s, v)\n          .send({\n            from: userAddress,\n            gasPrice: web3.utils.toHex(gasPrice),\n            gasLimit: web3.utils.toHex(gasLimit),\n          });\n\n        tx.on(\"transactionHash\", function (hash) {\n          console.log(`Transaction hash is ${hash}`);\n          alert(`Transaction sent by relayer with hash ${hash}`);\n        }).once(\"confirmation\", function (confirmationNumber, receipt) {\n          console.log(receipt);\n          alert(\"Transaction confirmed on chain\");\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const constructMetaTransactionMessage = (\n    nonce,\n    chainId,\n    functionSignature,\n    contractAddress\n  ) => {\n    return abi.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  };\n\n  const getSignatureParameters = (signature) => {\n    if (!web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v,\n    };\n  };\n\n  return (\n    <Web3Context.Provider\n      value={{\n        samajContractAddress: ContractsMetaData.contractAddress.samaj,\n        web3,\n        sendTransactionToERC20ApproveWithSignature,\n        init,\n        userAddress,\n        samajContract,\n        isLoading,\n        usdContract,\n        erc20ApproveWithSignContract,\n        erc20NonApproveWithSignContract,\n        sendTransaction,\n      }}>\n      {props.children}\n    </Web3Context.Provider>\n  );\n};\n\nexport default Web3ContextProvider;\n","const config = {\n  biconomyApiKey: \"l2fZwq-MV.0e8cda7f-36bd-4272-b6a2-2bc7e7e92e37\",\n  rinkebyChainID: 4,\n};\n\nmodule.exports = { config };\n","import React, { useState, useContext } from \"react\";\nimport {\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport \"./RegisterScreen.css\";\nimport { Web3Context } from \"../../../context/Web3Context\";\n\nconst IpfsHttpClient = require(\"ipfs-http-client\");\nconst ipfs = IpfsHttpClient({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n});\n\nconst RegisterScreen = () => {\n  const { samajContract, userAddress, sendTransaction } = useContext(\n    Web3Context\n  );\n\n  const [profileImage, setImage] = useState(null);\n  const [profileImageBuffer, setBuffer] = useState(null);\n  const [userName, setUserName] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [profileImageHash, setProfileImageHash] = useState(null);\n\n  return (\n    <div className=\"input-form\">\n      <Form.Label>Register </Form.Label>\n      <InputGroup className=\"mb-3  \">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\" className=\"input-prepend\">\n            UserName\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          className=\"input username-input\"\n          onChange={(e) => {\n            setUserName(e.target.value);\n          }}\n        />\n      </InputGroup>\n      <InputGroup className=\"mb-3 \">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\" className=\"input-prepend\">\n            Bio\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          as=\"textarea\"\n          className=\"input bio-input\"\n          onChange={(e) => {\n            setBio(e.target.value);\n            console.log(e.target.value);\n          }}\n        />\n      </InputGroup>\n      <Form.File\n        className=\"profile-image-input \"\n        label=\"Select your profile Image\"\n        onChange={(event) => {\n          event.preventDefault();\n          setImage(URL.createObjectURL(event.target.files[0]));\n          const file = event.target.files[0];\n          const reader = new window.FileReader();\n          reader.readAsArrayBuffer(file);\n          reader.onloadend = () => {\n            setBuffer(Buffer(reader.result));\n          };\n        }}\n      />\n      <br />\n      <Row>\n        <Col>\n          <Button\n            variant=\"dark\"\n            onClick={async () => {\n              console.log(\"Keshav\");\n              const imageIpfsResponse = await ipfs.add(profileImageBuffer);\n              const profileData = JSON.stringify({\n                userName,\n                bio,\n              });\n              const profileDataIpfsResponse = await ipfs.add(profileData);\n              console.log(samajContract.methods);\n              const functionData = samajContract.methods.createUser(\n                imageIpfsResponse.path,\n                profileDataIpfsResponse.path\n              );\n              sendTransaction(functionData);\n            }}>\n            Register\n          </Button>\n        </Col>{\" \"}\n        <br />\n        <Col>\n          {profileImage ? (\n            <img\n              src={profileImage}\n              height=\"256\"\n              width=\"256\"\n              className=\"profile-image\"\n            />\n          ) : (\n            <span></span>\n          )}{\" \"}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  Container,\n  Dropdown,\n  Spinner,\n} from \"react-bootstrap\";\nimport { Web3Context } from \"../../context/Web3Context\";\nimport \"./AddNewBlog.css\";\n\nconst IpfsHttpClient = require(\"ipfs-http-client\");\nconst ipfs = IpfsHttpClient({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n});\n\nconst AddNewBlog = () => {\n  const { samajContract, userAddress, sendTransaction } = useContext(\n    Web3Context\n  );\n  const [isLoading, setLoading] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(\"Payment Option\");\n  const [paymentMethodId, setPaymentMethodId] = useState(1);\n  const [title, setTitle] = useState();\n  const [body, setBody] = useState();\n  const [blogImage, setBlogImage] = useState();\n  const [blogImageBuffer, setBlogImageBuffer] = useState();\n\n  return (\n    <div className=\"form-wrapper\">\n      <Container>\n        <Form className=\"blog-upload-form\">\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control\n              type=\"Text\"\n              placeholder=\"Enter Title\"\n              className=\"input title-input\"\n              onChange={(event) => {\n                setTitle(event.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Body</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={5}\n              className=\"input blog-input\"\n              onChange={(event) => {\n                setBody(event.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Row>\n            <Col xs={5}>\n              <Form.File\n                className=\"profile-image-input\"\n                label=\"Attach a cover Image\"\n                onChange={(event) => {\n                  event.preventDefault();\n                  setBlogImage(URL.createObjectURL(event.target.files[0]));\n                  const file = event.target.files[0];\n                  const reader = new window.FileReader();\n                  reader.readAsArrayBuffer(file);\n                  reader.onloadend = () => {\n                    setBlogImageBuffer(Buffer(reader.result));\n                  };\n                }}\n              />\n            </Col>\n\n            <Col xs={7} className=\"submit-button-column\">\n              {isLoading ? (\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              ) : (\n                <Button\n                  variant=\"dark\"\n                  className=\"submit-button\"\n                  onClick={async () => {\n                    setLoading(true);\n                    const resposneImage = await ipfs.add(blogImageBuffer);\n                    const ipfsImageHash = resposneImage.path;\n                    const blogDetails = JSON.stringify({\n                      title,\n                      body,\n                    });\n                    const responseData = await ipfs.add(blogDetails);\n                    const ipfsDetailsHash = responseData.path;\n                    console.log(\n                      ipfsDetailsHash, //QmV65prKLSmcGGcYo1EK9FaURiUoJ3CBVTbHCYzgPFAmTs\n                      ipfsImageHash, //QmRVLDZpExaSWtsWaqqf1gVPRyR4iFNYtg5iCtMpthJGxg\n                      paymentMethodId //1\n                    );\n                    const functionData = samajContract.methods.addBlog(\n                      ipfsImageHash,\n                      ipfsDetailsHash,\n                      paymentMethodId\n                    );\n                    sendTransaction(functionData);\n                    setLoading(false);\n                  }}>\n                  Add Blog\n                </Button>\n              )}\n            </Col>\n            <Dropdown className=\"dropdown\">\n              <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\" size=\"sm\">\n                {paymentMethod}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onSelect={() => {\n                    setPaymentMethod(\"DAI\");\n                    setPaymentMethodId(1);\n                  }}>\n                  DAI\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onSelect={() => {\n                    setPaymentMethod(\"KM\");\n                    setPaymentMethodId(2);\n                  }}>\n                  KM\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onSelect={() => {\n                    setPaymentMethod(\"USD\");\n                    setPaymentMethodId(3);\n                  }}>\n                  USD\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            <img\n              src={blogImage}\n              height=\"25%\"\n              width=\"25%\"\n              className=\"blog-image\"\n            />\n          </Row>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default AddNewBlog;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  Container,\n  Dropdown,\n  Spinner,\n} from \"react-bootstrap\";\nimport { Web3Context } from \"../../context/Web3Context\";\nimport \"./AddNewResearchPaper.css\";\n\nconst IpfsHttpClient = require(\"ipfs-http-client\");\nconst ipfs = IpfsHttpClient({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"http\",\n});\nconst AddNewReasearchPaper = () => {\n  const { samajContract, userAddress, sendTransaction } = useContext(\n    Web3Context\n  );\n  const [isLoading, setLoading] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(\"Payment Option\");\n  const [paymentMethodId, setPaymentMethodId] = useState(1);\n  const [abstract, setAbstract] = useState();\n\n  const [doc, setDoc] = useState();\n  const [docBuffer, setDocBuffer] = useState();\n\n  return (\n    <div className=\"form-wrapper\">\n      <Form className=\"blog-upload-form\">\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Abstract</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={5}\n            className=\"input blog-input\"\n            onChange={(event) => {\n              setAbstract(event.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Form.File\n              className=\"profile-image-input\"\n              label=\"Attach a DOC\"\n              onChange={(event) => {\n                event.preventDefault();\n                const file = event.target.files[0];\n                const reader = new window.FileReader();\n                reader.readAsArrayBuffer(file);\n                reader.onloadend = () => {\n                  setDocBuffer(Buffer(reader.result));\n                };\n              }}\n            />\n          </Col>\n          <Dropdown className=\"dropdown\">\n            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\" size=\"sm\">\n              {paymentMethod}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item\n                onSelect={() => {\n                  setPaymentMethod(\"DAI\");\n                  setPaymentMethodId(1);\n                }}>\n                DAI\n              </Dropdown.Item>\n              <Dropdown.Item\n                onSelect={() => {\n                  setPaymentMethod(\"KM\");\n                  setPaymentMethodId(2);\n                }}>\n                KM\n              </Dropdown.Item>\n              <Dropdown.Item\n                onSelect={() => {\n                  setPaymentMethod(\"USD\");\n                  setPaymentMethodId(3);\n                }}>\n                USD\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <Col xs={7} className=\"submit-button-column\">\n            <Button\n              variant=\"dark\"\n              className=\"submit-button\"\n              onClick={async () => {\n                const abstractIpfsResponse = await ipfs.add(abstract);\n                const docIpfsResponse = await ipfs.add(docBuffer);\n                const docIpfsHash = docIpfsResponse.path;\n                const abstractIpfsHash = abstractIpfsResponse.path;\n                const functionData = await samajContract.methods.addResearchPaper(\n                  docIpfsHash,\n                  abstractIpfsHash,\n                  paymentMethodId\n                );\n                sendTransaction(functionData);\n              }}>\n              Add ResearchPaper\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddNewReasearchPaper;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  Container,\n  Dropdown,\n  Spinner,\n} from \"react-bootstrap\";\nimport { Web3Context } from \"../../context/Web3Context\";\n\nconst IpfsHttpClient = require(\"ipfs-http-client\");\nconst ipfs = IpfsHttpClient({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n});\nconst AddNewPost = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(\"Payment Option\");\n  const [paymentMethodId, setPaymentMethodId] = useState(1);\n  const [caption, setCaption] = useState();\n  const [postImage, setPostImage] = useState();\n  const [postImageBuffer, setPostImageBuffer] = useState();\n\n  const { samajContract, userAddress, sendTransaction } = useContext(\n    Web3Context\n  );\n\n  return (\n    <div className=\"form-wrapper\">\n      <Form className=\"blog-upload-form\">\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Caption</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={2}\n            className=\"input caption-input\"\n            onChange={(event) => {\n              setCaption(event.target.value);\n            }}\n          />\n        </Form.Group>\n        <Container>\n          <Row>\n            <Col>\n              <Form.File\n                className=\"image-input \"\n                label=\"Select a Image\"\n                onChange={(event) => {\n                  event.preventDefault();\n                  setPostImage(URL.createObjectURL(event.target.files[0]));\n                  const file = event.target.files[0];\n                  const reader = new window.FileReader();\n                  reader.readAsArrayBuffer(file);\n                  reader.onloadend = () => {\n                    setPostImageBuffer(Buffer(reader.result));\n                  };\n                }}\n              />{\" \"}\n              <Dropdown className=\"dropdown\">\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\" size=\"sm\">\n                  {paymentMethod}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    onSelect={() => {\n                      setPaymentMethod(\"DAI\");\n                      setPaymentMethodId(1);\n                    }}>\n                    DAI\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    onSelect={() => {\n                      setPaymentMethod(\"KM\");\n                      setPaymentMethodId(2);\n                    }}>\n                    KM\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    onSelect={() => {\n                      setPaymentMethod(\"USD\");\n                      setPaymentMethodId(3);\n                    }}>\n                    USD\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n            <Col>\n              <img src={postImage} height=\"128px\" />\n              <Button\n                variant=\"dark\"\n                className=\"submit-button\"\n                onClick={async (e) => {\n                  console.log(caption);\n                  console.log(postImageBuffer);\n                  console.log(paymentMethodId);\n                  const captionIpfsResponse = await ipfs.add(caption);\n                  const imageIpfsResponse = await ipfs.add(postImageBuffer);\n\n                  const captionIpfsHash = captionIpfsResponse.path;\n                  const imageIpfsHash = imageIpfsResponse.path;\n\n                  const functionData = samajContract.methods.addMiscPost(\n                    imageIpfsHash,\n                    captionIpfsHash,\n                    paymentMethodId\n                  );\n                  sendTransaction(functionData);\n                }}>\n                Add Post\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddNewPost;\n","module.exports = {\n  baseUrl: \"http://localhost:5000\",\n};\n","//All contracts correspond to rinkeby network\n\nmodule.exports = {\n  tellorDataIDs: {\n    dai: 39,\n    usd: 1,\n    bnb: 3,\n    trx: 12,\n  },\n\n  contractAddress: {\n    tellorGetLatestPrice: \"0x1913713d479259580Be39969C89f4d162dA3b2d3\",\n    erc20NonApproveWithSignature: \"0xA5D71ce2297Ff3c025Ece1F1Ea7975a76E0a1aD2\",\n    erc20ApproveWithSignature: \"0x31DA332A7274B4E3E1d7456050Cd02B65B5dC9f0\",\n    samaj: \"0x22c70e4c8D5Edb1F48F57dca0C6da5f7E550De57\",\n    usdToken: \"0x92C35d52724eE277f3A53323071659DB47E55bf7\",\n  },\n  contractABI: {\n    samaj: [\n      {\n        inputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: false,\n            internalType: \"address\",\n            name: \"userAddress\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"address payable\",\n            name: \"relayerAddress\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n        ],\n        name: \"MetaTransactionExecuted\",\n        type: \"event\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"_ipfsImageHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"_ipfsDetailsHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_payToken\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"addBlog\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"_ipfsImageHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"_ipfsDetailsHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_payToken\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"addMiscPost\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"_ipfsImageHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"_ipfsDetailsHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_payToken\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"addPatents\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"_ipfsImageHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"_ipfsDetailsHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_payToken\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"addResearchPaper\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"_name\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"_symbol\",\n            type: \"string\",\n          },\n        ],\n        name: \"becomeCreator\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"uint256\",\n            name: \"_amountInWei\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"_userAddress\",\n            type: \"address\",\n          },\n        ],\n        name: \"chargeGasFeeInERC20ApproveWithSign\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"uint256\",\n            name: \"_amountInWei\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"_userAddress\",\n            type: \"address\",\n          },\n        ],\n        name: \"chargeGasFeeInErc20NonApproveWithSIgn\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"uint256\",\n            name: \"_amountInWei\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"_userAddress\",\n            type: \"address\",\n          },\n        ],\n        name: \"chargeGasFeeInUSD\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"_profileImageIPFShash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"_profileDetailsIPFSHash\",\n            type: \"string\",\n          },\n        ],\n        name: \"createUser\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"\",\n            type: \"address\",\n          },\n        ],\n        name: \"creatorsContracts\",\n        outputs: [\n          {\n            internalType: \"address\",\n            name: \"\",\n            type: \"address\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"uint256\",\n            name: \"_amountInUSD\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"_userAddress\",\n            type: \"address\",\n          },\n        ],\n        name: \"depositUSD\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"userAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigR\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigS\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"sigV\",\n            type: \"uint8\",\n          },\n        ],\n        name: \"executeMetaTransaction\",\n        outputs: [\n          {\n            internalType: \"bytes\",\n            name: \"\",\n            type: \"bytes\",\n          },\n        ],\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"_userAccount\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_id\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"getBlog\",\n        outputs: [\n          {\n            components: [\n              {\n                internalType: \"string\",\n                name: \"ipfsDetailsHash\",\n                type: \"string\",\n              },\n              {\n                internalType: \"string\",\n                name: \"ipfsImageHash\",\n                type: \"string\",\n              },\n            ],\n            internalType: \"struct Samaj.Blog\",\n            name: \"_blog\",\n            type: \"tuple\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"getChainID\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"pure\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"_creatorAddress\",\n            type: \"address\",\n          },\n        ],\n        name: \"getCreatorTokenDetails\",\n        outputs: [\n          {\n            internalType: \"string\",\n            name: \"_symbol\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"totalSupply\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"uint256\",\n            name: \"_dataId\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"getLatestPrice\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"_userAccount\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_id\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"getMiscPost\",\n        outputs: [\n          {\n            components: [\n              {\n                internalType: \"string\",\n                name: \"ipfsDetailsHash\",\n                type: \"string\",\n              },\n              {\n                internalType: \"string\",\n                name: \"ipfsImageHash\",\n                type: \"string\",\n              },\n            ],\n            internalType: \"struct Samaj.MiscPost\",\n            name: \"_miscPost\",\n            type: \"tuple\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"user\",\n            type: \"address\",\n          },\n        ],\n        name: \"getNonce\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"_userAccount\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_id\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"getPatent\",\n        outputs: [\n          {\n            components: [\n              {\n                internalType: \"string\",\n                name: \"ipfsDetailsHash\",\n                type: \"string\",\n              },\n              {\n                internalType: \"string\",\n                name: \"ipfsImageHash\",\n                type: \"string\",\n              },\n            ],\n            internalType: \"struct Samaj.Patent\",\n            name: \"_patent\",\n            type: \"tuple\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"_userAccount\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_id\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"getResearchPaper\",\n        outputs: [\n          {\n            components: [\n              {\n                internalType: \"string\",\n                name: \"ipfsDetailsHash\",\n                type: \"string\",\n              },\n              {\n                internalType: \"string\",\n                name: \"ipfsImageHash\",\n                type: \"string\",\n              },\n            ],\n            internalType: \"struct Samaj.ResearchPaper\",\n            name: \"_researchPaper\",\n            type: \"tuple\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"_creatorAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_amountOfToken\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_payToken\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"purchaseCreatorToken\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"uint256\",\n            name: \"_amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"_senderAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"_recieverAddresss\",\n            type: \"address\",\n          },\n        ],\n        name: \"supportUserDai\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"uint256\",\n            name: \"_amount\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address\",\n            name: \"_senderAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"_recieverAddresss\",\n            type: \"address\",\n          },\n        ],\n        name: \"supportUserKM\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"\",\n            type: \"address\",\n          },\n        ],\n        name: \"users\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"isRegistered\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"isCreator\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"string\",\n            name: \"profileImageIPFShash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"profileDetailsIPFSHash\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"numberOfBlogs\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"numberOfResearchPapers\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"numberOfPatents\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"numberOfMiscPosts\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"chainID\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigR\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigS\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"sigV\",\n            type: \"uint8\",\n          },\n        ],\n        name: \"verify\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n    ],\n    erc20ApproveWithSignature: [\n      {\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"name\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"symbol\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: false,\n            internalType: \"address\",\n            name: \"userAddress\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"address payable\",\n            name: \"relayerAddress\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n        ],\n        name: \"MetaTransactionExecuted\",\n        type: \"event\",\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"from\",\n            type: \"address\",\n          },\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n        ],\n        name: \"allowance\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"approve\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"approveViaSignature\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n          {\n            internalType: \"uint8\",\n            name: \"\",\n            type: \"uint8\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"userAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigR\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigS\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"sigV\",\n            type: \"uint8\",\n          },\n        ],\n        name: \"executeMetaTransaction\",\n        outputs: [\n          {\n            internalType: \"bytes\",\n            name: \"\",\n            type: \"bytes\",\n          },\n        ],\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"getChainID\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"pure\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"user\",\n            type: \"address\",\n          },\n        ],\n        name: \"getNonce\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"mint\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n          {\n            internalType: \"string\",\n            name: \"\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n          {\n            internalType: \"string\",\n            name: \"\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"transfer\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"chainID\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigR\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigS\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"sigV\",\n            type: \"uint8\",\n          },\n        ],\n        name: \"verify\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n    ],\n\n    erc20NonApproveWithSignature: [\n      {\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"name\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"symbol\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"from\",\n            type: \"address\",\n          },\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n        ],\n        name: \"allowance\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"approve\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n          {\n            internalType: \"uint8\",\n            name: \"\",\n            type: \"uint8\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"mint\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n          {\n            internalType: \"string\",\n            name: \"\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n          {\n            internalType: \"string\",\n            name: \"\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"transfer\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n    ],\n    usdToken: [\n      {\n        inputs: [\n          {\n            internalType: \"string\",\n            name: \"name\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"symbol\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: false,\n            internalType: \"address\",\n            name: \"userAddress\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"address payable\",\n            name: \"relayerAddress\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n        ],\n        name: \"MetaTransactionExecuted\",\n        type: \"event\",\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"from\",\n            type: \"address\",\n          },\n          {\n            indexed: true,\n            internalType: \"address\",\n            name: \"to\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            internalType: \"uint256\",\n            name: \"value\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n          {\n            internalType: \"uint8\",\n            name: \"\",\n            type: \"uint8\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"userAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigR\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigS\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"sigV\",\n            type: \"uint8\",\n          },\n        ],\n        name: \"executeMetaTransaction\",\n        outputs: [\n          {\n            internalType: \"bytes\",\n            name: \"\",\n            type: \"bytes\",\n          },\n        ],\n        payable: true,\n        stateMutability: \"payable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"getChainID\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"pure\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"user\",\n            type: \"address\",\n          },\n        ],\n        name: \"getNonce\",\n        outputs: [\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"account\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"mint\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"name\",\n        outputs: [\n          {\n            internalType: \"string\",\n            name: \"\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n          {\n            internalType: \"string\",\n            name: \"\",\n            type: \"string\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n      {\n        constant: false,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"sender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"address\",\n            name: \"recipient\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"transfer\",\n        outputs: [],\n        payable: false,\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      },\n      {\n        constant: true,\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"owner\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"nonce\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"chainID\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"bytes\",\n            name: \"functionSignature\",\n            type: \"bytes\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigR\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"sigS\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"sigV\",\n            type: \"uint8\",\n          },\n        ],\n        name: \"verify\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        payable: false,\n        stateMutability: \"view\",\n        type: \"function\",\n      },\n    ],\n  },\n};\n"],"sourceRoot":""}